{"ast":null,"code":"var _jsxFileName = \"/Users/shyamghetiya/Desktop/both/faka/demo/src/components/Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { AiOutlineEye, AiOutlineEyeInvisible } from 'react-icons/ai';\nimport { toast } from 'react-toastify'; // Include ToastContainer in your main component\nimport './Login.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Login = () => {\n  _s();\n  const [showPassword, setShowPassword] = useState(false);\n  const [emailError, setEmailError] = useState(false);\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/; // Regular expression for validating email format\n\n  function changeHandler(event) {\n    const {\n      name,\n      value\n    } = event.target;\n\n    // Validate email format as the user types\n    if (name === \"email\") {\n      setEmailError(!emailRegex.test(value));\n    }\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  }\n\n  // Handle form submission\n  async function handleLogin(e) {\n    e.preventDefault();\n\n    // Check if email format is valid\n    if (emailError || !emailRegex.test(formData.email)) {\n      toast.error(\"Invalid email format\");\n      return;\n    }\n\n    // Send data to backend to check if user exists and validate password\n    const {\n      email,\n      password\n    } = formData;\n    try {\n      const res = await fetch(\"/api/v1/createlogin\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await res.json();\n      if (res.status === 200 && data.success) {\n        toast.success(\"Login Successful\");\n      } else if (res.status === 400 && data.message === \"User not registered\") {\n        toast.error(\"User not registered\");\n      } else if (res.status === 400 && data.message === \"Incorrect password\") {\n        toast.error(\"Incorrect password\");\n      } else {\n        toast.error(\"Something went wrong\");\n      }\n    } catch (error) {\n      toast.error(\"Error connecting to the server\");\n      console.error(\"Error: \", error);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"heading\",\n      children: \"Login to your Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        method: \"POST\",\n        onSubmit: handleLogin,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            children: [\"\\uD83D\\uDCE7 Email Address \", /*#__PURE__*/_jsxDEV(\"sup\", {\n              className: \"required\",\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 32\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            required: true,\n            placeholder: \"Enter your email address\",\n            value: formData.email,\n            onChange: changeHandler,\n            name: \"email\",\n            className: `form-input ${emailError ? \"error\" : \"\"}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), emailError && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-text\",\n            children: \"Email is not valid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 28\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group password-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            children: [\"\\uD83D\\uDD10 Password \", /*#__PURE__*/_jsxDEV(\"sup\", {\n              className: \"required\",\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: showPassword ? \"text\" : \"password\",\n            required: true,\n            placeholder: \"Enter Password\",\n            onChange: changeHandler,\n            value: formData.password,\n            name: \"password\",\n            className: \"form-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: () => setShowPassword(!showPassword),\n            className: \"password-toggle\",\n            children: showPassword ? /*#__PURE__*/_jsxDEV(AiOutlineEyeInvisible, {\n              fontSize: 24,\n              fill: \"#AFB2BF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(AiOutlineEye, {\n              fontSize: 24,\n              fill: \"#AFB2BF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submit-button\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Login, \"rUfaefXhV+UyMm1+e3CH5QNiQvs=\");\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","AiOutlineEye","AiOutlineEyeInvisible","toast","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","_s","showPassword","setShowPassword","emailError","setEmailError","formData","setFormData","email","password","emailRegex","changeHandler","event","name","value","target","test","prev","handleLogin","e","preventDefault","error","res","fetch","method","headers","body","JSON","stringify","data","json","status","success","message","console","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","required","placeholder","onChange","onClick","fontSize","fill","_c","$RefreshReg$"],"sources":["/Users/shyamghetiya/Desktop/both/faka/demo/src/components/Login.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { AiOutlineEye, AiOutlineEyeInvisible } from 'react-icons/ai';\nimport { toast } from 'react-toastify'; // Include ToastContainer in your main component\nimport './Login.css';\n\nexport const Login = () => {\n  const [showPassword, setShowPassword] = useState(false);\n  const [emailError, setEmailError] = useState(false);\n\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/; // Regular expression for validating email format\n\n  function changeHandler(event) {\n    const { name, value } = event.target;\n\n    // Validate email format as the user types\n    if (name === \"email\") {\n      setEmailError(!emailRegex.test(value));\n    }\n\n    setFormData((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n  }\n\n  // Handle form submission\n  async function handleLogin(e) {\n    e.preventDefault();\n\n    // Check if email format is valid\n    if (emailError || !emailRegex.test(formData.email)) {\n      toast.error(\"Invalid email format\");\n      return;\n    }\n\n    // Send data to backend to check if user exists and validate password\n    const { email, password } = formData;\n\n    try {\n      const res = await fetch(\"/api/v1/createlogin\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ email, password }),\n      });\n\n      const data = await res.json();\n\n      if (res.status === 200 && data.success) {\n        toast.success(\"Login Successful\");\n      } else if (res.status === 400 && data.message === \"User not registered\") {\n        toast.error(\"User not registered\");\n      } else if (res.status === 400 && data.message === \"Incorrect password\") {\n        toast.error(\"Incorrect password\");\n      } else {\n        toast.error(\"Something went wrong\");\n      }\n\n    } catch (error) {\n      toast.error(\"Error connecting to the server\");\n      console.error(\"Error: \", error);\n    }\n  }\n\n  return (\n    <>\n      <div className='heading'>Login to your Account</div>\n      <div className=\"login-container\">\n        <form method=\"POST\" onSubmit={handleLogin}>\n          <div className=\"form-group\">\n            <label className=\"form-label\">\n              📧 Email Address <sup className=\"required\">*</sup>\n            </label>\n            <input\n              type=\"email\"\n              required\n              placeholder=\"Enter your email address\"\n              value={formData.email}\n              onChange={changeHandler}\n              name=\"email\"\n              className={`form-input ${emailError ? \"error\" : \"\"}`}\n            />\n            {emailError && <span className=\"error-text\">Email is not valid</span>}\n          </div>\n\n          <div className=\"form-group password-group\">\n            <label className=\"form-label\">\n              🔐 Password <sup className=\"required\">*</sup>\n            </label>\n            <input\n              type={showPassword ? \"text\" : \"password\"}\n              required\n              placeholder=\"Enter Password\"\n              onChange={changeHandler}\n              value={formData.password}\n              name=\"password\"\n              className=\"form-input\"\n            />\n            <span\n              onClick={() => setShowPassword(!showPassword)}\n              className=\"password-toggle\"\n            >\n              {showPassword ? (\n                <AiOutlineEyeInvisible fontSize={24} fill=\"#AFB2BF\" />\n              ) : (\n                <AiOutlineEye fontSize={24} fill=\"#AFB2BF\" />\n              )}\n            </span>\n          </div>\n\n          <button type=\"submit\" className=\"submit-button\">\n            Login\n          </button>\n        </form>\n      </div>\n    </>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}