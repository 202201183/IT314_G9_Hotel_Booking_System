{"ast":null,"code":"var _jsxFileName = \"/Users/shyamghetiya/Desktop/both/faka/demo/src/components/Signup.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { AiOutlineEye, AiOutlineEyeInvisible } from 'react-icons/ai';\nimport { toast } from 'react-toastify'; // Include ToastContainer in your main component\nimport './Signup.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Signup = () => {\n  _s();\n  const [showCreatePass, setShowCreatePass] = useState(false);\n  const [showConfirmPass, setShowConfirmPass] = useState(false);\n  const [emailError, setEmailError] = useState(false);\n  const [emailExists, setEmailExists] = useState(false);\n  const [formData, setFormData] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  });\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/; // Regular expression for validating email format\n\n  function changeHandler(event) {\n    const {\n      name,\n      value\n    } = event.target;\n\n    // Validate email format as the user types\n    if (name === \"email\") {\n      setEmailError(!emailRegex.test(value));\n    }\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  }\n\n  // Password Validation Function\n  const validatePassword = password => {\n    const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/;\n    return passwordRegex.test(password);\n  };\n\n  // Handle form submission\n  async function postdata_into_database(e) {\n    e.preventDefault();\n\n    // Check if email format is valid\n    if (emailError || !emailRegex.test(formData.email)) {\n      toast.error(\"Invalid email format\");\n      return;\n    }\n\n    // Check if password and confirm password match\n    if (formData.password !== formData.confirmPassword) {\n      toast.error(\"Passwords do not match\");\n      return;\n    }\n\n    // Validate password strength\n    if (!validatePassword(formData.password)) {\n      toast.error('Password must contain at least one uppercase letter, one lowercase letter, one digit, one special character, and be at least 8 characters long');\n      return;\n    }\n\n    // Send data to backend to check if email exists and create the account\n    const {\n      firstName,\n      lastName,\n      email,\n      password,\n      confirmPassword\n    } = formData;\n    try {\n      const res = await fetch(\"/api/v1/createmessage\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          first_name: firstName,\n          last_name: lastName,\n          e_mail: email,\n          password,\n          confirm_password: confirmPassword\n        })\n      });\n      const data = await res.json();\n      if (res.status === 200 && data.success) {\n        toast.success(\"Account Created Successfully\");\n        setFormData({\n          firstName: \"\",\n          lastName: \"\",\n          email: \"\",\n          password: \"\",\n          confirmPassword: \"\"\n        });\n      } else if (res.status === 400 && data.message === \"User with this email already exists\") {\n        toast.error(\"User already exists with this email\");\n      } else if (res.status === 400 && data.message === \"Password and confirm password do not match\") {\n        toast.error(\"Password and Confirm Password do not match\");\n      } else {\n        toast.error(\"Something went wrong\");\n      }\n    } catch (error) {\n      toast.error(\"Error connecting to the server\");\n      console.error(\"Error: \", error);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"heading\",\n      children: \"Sign Up for the Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"signup-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        method: \"POST\",\n        onSubmit: postdata_into_database,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            children: [\"First Name \", /*#__PURE__*/_jsxDEV(\"sup\", {\n              className: \"required\",\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 26\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            required: true,\n            placeholder: \"Enter First Name\",\n            onChange: changeHandler,\n            value: formData.firstName,\n            name: \"firstName\",\n            className: \"form-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            children: [\"Last Name \", /*#__PURE__*/_jsxDEV(\"sup\", {\n              className: \"required\",\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            required: true,\n            placeholder: \"Enter Last Name\",\n            onChange: changeHandler,\n            value: formData.lastName,\n            name: \"lastName\",\n            className: \"form-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            children: [\"Email Address \", /*#__PURE__*/_jsxDEV(\"sup\", {\n              className: \"required\",\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            required: true,\n            placeholder: \"Enter your email address\",\n            value: formData.email,\n            onChange: changeHandler,\n            name: \"email\",\n            className: `form-input ${emailError ? \"error\" : \"\"}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this), emailError && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-text\",\n            children: [/*#__PURE__*/_jsxDEV(\"sup\", {\n              className: \"required\",\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 57\n            }, this), \"Email is not valid\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 28\n          }, this), emailExists && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-text\",\n            children: \"User already exists with this email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group password-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            children: [\"Create Password \", /*#__PURE__*/_jsxDEV(\"sup\", {\n              className: \"required\",\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: showCreatePass ? \"text\" : \"password\",\n            required: true,\n            placeholder: \"Enter Password\",\n            onChange: changeHandler,\n            value: formData.password,\n            name: \"password\",\n            className: \"form-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: () => setShowCreatePass(!showCreatePass),\n            className: \"password-toggle\",\n            children: showCreatePass ? /*#__PURE__*/_jsxDEV(AiOutlineEyeInvisible, {\n              fontSize: 24,\n              fill: \"#AFB2BF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(AiOutlineEye, {\n              fontSize: 24,\n              fill: \"#AFB2BF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group password-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            children: [\"Confirm Password \", /*#__PURE__*/_jsxDEV(\"sup\", {\n              className: \"required\",\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 32\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: showConfirmPass ? \"text\" : \"password\",\n            required: true,\n            placeholder: \"Confirm Password\",\n            onChange: changeHandler,\n            value: formData.confirmPassword,\n            name: \"confirmPassword\",\n            className: \"form-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: () => setShowConfirmPass(!showConfirmPass),\n            className: \"password-toggle\",\n            children: showConfirmPass ? /*#__PURE__*/_jsxDEV(AiOutlineEyeInvisible, {\n              fontSize: 24,\n              fill: \"#AFB2BF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(AiOutlineEye, {\n              fontSize: 24,\n              fill: \"#AFB2BF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submit-button\",\n          children: \"Create Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Signup, \"MPvNEDwIJn+JWLigbLf8gVcFab4=\");\n_c = Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useState","AiOutlineEye","AiOutlineEyeInvisible","toast","jsxDEV","_jsxDEV","Fragment","_Fragment","Signup","_s","showCreatePass","setShowCreatePass","showConfirmPass","setShowConfirmPass","emailError","setEmailError","emailExists","setEmailExists","formData","setFormData","firstName","lastName","email","password","confirmPassword","emailRegex","changeHandler","event","name","value","target","test","prev","validatePassword","passwordRegex","postdata_into_database","e","preventDefault","error","res","fetch","method","headers","body","JSON","stringify","first_name","last_name","e_mail","confirm_password","data","json","status","success","message","console","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","required","placeholder","onChange","onClick","fontSize","fill","_c","$RefreshReg$"],"sources":["/Users/shyamghetiya/Desktop/both/faka/demo/src/components/Signup.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { AiOutlineEye, AiOutlineEyeInvisible } from 'react-icons/ai';\nimport { toast } from 'react-toastify'; // Include ToastContainer in your main component\nimport './Signup.css';\n\nexport const Signup = () => {\n  const [showCreatePass, setShowCreatePass] = useState(false);\n  const [showConfirmPass, setShowConfirmPass] = useState(false);\n  const [emailError, setEmailError] = useState(false);\n  const [emailExists, setEmailExists] = useState(false);\n\n  const [formData, setFormData] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/; // Regular expression for validating email format\n\n  function changeHandler(event) {\n    const { name, value } = event.target;\n\n    // Validate email format as the user types\n    if (name === \"email\") {\n      setEmailError(!emailRegex.test(value));\n    }\n\n    setFormData((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n  }\n\n  // Password Validation Function\n  const validatePassword = (password) => {\n    const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/;\n    return passwordRegex.test(password);\n  };\n\n  // Handle form submission\n  async function postdata_into_database(e) {\n    e.preventDefault();\n\n    // Check if email format is valid\n    if (emailError || !emailRegex.test(formData.email)) {\n      toast.error(\"Invalid email format\");\n      return;\n    }\n\n    // Check if password and confirm password match\n    if (formData.password !== formData.confirmPassword) {\n      toast.error(\"Passwords do not match\");\n      return;\n    }\n\n    // Validate password strength\n    if (!validatePassword(formData.password)) {\n      toast.error(\n        'Password must contain at least one uppercase letter, one lowercase letter, one digit, one special character, and be at least 8 characters long'\n      );\n      return;\n    }\n\n    // Send data to backend to check if email exists and create the account\n    const { firstName, lastName, email, password, confirmPassword } = formData;\n\n    try {\n      const res = await fetch(\"/api/v1/createmessage\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          first_name: firstName,\n          last_name: lastName,\n          e_mail: email,\n          password,\n          confirm_password: confirmPassword,\n        }),\n      });\n\n      const data = await res.json();\n\n      if (res.status === 200 && data.success) {\n        toast.success(\"Account Created Successfully\");\n        setFormData({\n          firstName: \"\",\n          lastName: \"\",\n          email: \"\",\n          password: \"\",\n          confirmPassword: \"\",\n        });\n      } else if (res.status === 400 && data.message === \"User with this email already exists\") {\n        toast.error(\"User already exists with this email\");\n      } else if (res.status === 400 && data.message === \"Password and confirm password do not match\") {\n        toast.error(\"Password and Confirm Password do not match\");\n      } else {\n        toast.error(\"Something went wrong\");\n      }\n\n    } catch (error) {\n      toast.error(\"Error connecting to the server\");\n      console.error(\"Error: \", error);\n    }\n  }\n\n  return (\n    <>\n      <div className='heading'>Sign Up for the Register</div>\n      <div className=\"signup-container\">\n        <form method=\"POST\" onSubmit={postdata_into_database}>\n          <div className=\"form-group\">\n            <label className=\"form-label\">\n              First Name <sup className=\"required\">*</sup>\n            </label>\n            <input\n              type=\"text\"\n              required\n              placeholder=\"Enter First Name\"\n              onChange={changeHandler}\n              value={formData.firstName}\n              name=\"firstName\"\n              className=\"form-input\"\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label className=\"form-label\">\n              Last Name <sup className=\"required\">*</sup>\n            </label>\n            <input\n              type=\"text\"\n              required\n              placeholder=\"Enter Last Name\"\n              onChange={changeHandler}\n              value={formData.lastName}\n              name=\"lastName\"\n              className=\"form-input\"\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label className=\"form-label\">\n              Email Address <sup className=\"required\">*</sup>\n            </label>\n            <input\n              type=\"email\"\n              required\n              placeholder=\"Enter your email address\"\n              value={formData.email}\n              onChange={changeHandler}\n              name=\"email\"\n              className={`form-input ${emailError ? \"error\" : \"\"}`}\n            />\n            {emailError && <span className=\"error-text\"><sup className=\"required\">*</sup>Email is not valid</span>}\n            {emailExists && <span className=\"error-text\">User already exists with this email</span>}\n          </div>\n\n          <div className=\"form-group password-group\">\n            <label className=\"form-label\">\n              Create Password <sup className=\"required\">*</sup>\n            </label>\n            <input\n              type={showCreatePass ? \"text\" : \"password\"}\n              required\n              placeholder=\"Enter Password\"\n              onChange={changeHandler}\n              value={formData.password}\n              name=\"password\"\n              className=\"form-input\"\n            />\n            <span\n              onClick={() => setShowCreatePass(!showCreatePass)}\n              className=\"password-toggle\"\n            >\n              {showCreatePass ? (\n                <AiOutlineEyeInvisible fontSize={24} fill=\"#AFB2BF\" />\n              ) : (\n                <AiOutlineEye fontSize={24} fill=\"#AFB2BF\" />\n              )}\n            </span>\n          </div>\n\n          <div className=\"form-group password-group\">\n            <label className=\"form-label\">\n              Confirm Password <sup className=\"required\">*</sup>\n            </label>\n            <input\n              type={showConfirmPass ? \"text\" : \"password\"}\n              required\n              placeholder=\"Confirm Password\"\n              onChange={changeHandler}\n              value={formData.confirmPassword}\n              name=\"confirmPassword\"\n              className=\"form-input\"\n            />\n            <span\n              onClick={() => setShowConfirmPass(!showConfirmPass)}\n              className=\"password-toggle\"\n            >\n              {showConfirmPass ? (\n                <AiOutlineEyeInvisible fontSize={24} fill=\"#AFB2BF\" />\n              ) : (\n                <AiOutlineEye fontSize={24} fill=\"#AFB2BF\" />\n              )}\n            </span>\n          </div>\n\n          <button type=\"submit\" className=\"submit-button\">\n            Create Account\n          </button>\n        </form>\n      </div>\n    </>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}