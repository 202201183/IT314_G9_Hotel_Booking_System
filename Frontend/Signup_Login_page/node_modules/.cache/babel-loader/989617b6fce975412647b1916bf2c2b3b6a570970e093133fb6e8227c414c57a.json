{"ast":null,"code":"var _jsxFileName = \"/Users/shyamghetiya/Desktop/both/faka/demo/src/components/Signup.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { AiOutlineEye, AiOutlineEyeInvisible } from 'react-icons/ai';\nimport { toast } from 'react-toastify';\nimport './Signup.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Signup = () => {\n  _s();\n  const [showCreatePass, setShowCreatePass] = useState(false);\n  const [showConfirmPass, setShowConfirmPass] = useState(false);\n  const [emailError, setEmailError] = useState(false);\n  const [emailExists, setEmailExists] = useState(false);\n  const [existingEmails, setExistingEmails] = useState([]); // To store all emails from the backend\n\n  const [formData, setFormData] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  });\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n\n  // Fetch existing emails from the backend on component mount\n  useEffect(() => {\n    async function fetchEmails() {\n      try {\n        const res = await fetch(\"api/v1/getallusers\"); // Backend API to get all existing user emails\n        const data = await res.json();\n        setExistingEmails(data.emails); // Assuming backend sends { emails: [...] }\n      } catch (error) {\n        console.error(\"Error fetching existing emails:\", error);\n      }\n    }\n    fetchEmails();\n  }, []);\n  function changeHandler(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    if (name === \"email\") {\n      setEmailError(!emailRegex.test(value));\n    }\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  }\n  async function postdata_into_database(e) {\n    e.preventDefault();\n\n    // Validate email format\n    if (emailError || !emailRegex.test(formData.email)) {\n      toast.error(\"Invalid email format\");\n      return;\n    }\n\n    // Validate password matching\n    if (formData.password !== formData.confirmPassword) {\n      toast.error(\"Passwords do not match\");\n      return;\n    }\n\n    // Check if the email already exists locally from the fetched email list\n    if (existingEmails.includes(formData.email)) {\n      setEmailExists(true);\n      toast.error(\"User already exists with this email\");\n      return;\n    }\n    setEmailExists(false);\n    const {\n      firstName,\n      lastName,\n      email,\n      password,\n      confirmPassword\n    } = formData;\n    try {\n      // Proceed with creating the account\n      const res = await fetch(\"api/v1/createmessage\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          first_name: firstName,\n          last_name: lastName,\n          e_mail: email,\n          password,\n          confirm_password: confirmPassword\n        })\n      });\n      const data = await res.json();\n      if (data.success) {\n        toast.success(\"Account Created\");\n      } else {\n        toast.error(\"Error creating account\");\n      }\n    } catch (error) {\n      toast.error(\"Error connecting to the server\");\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"heading\",\n      children: \"Sign Up for the Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"signup-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        method: \"POST\",\n        onSubmit: postdata_into_database,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            children: [\"First Name \", /*#__PURE__*/_jsxDEV(\"sup\", {\n              className: \"required\",\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 26\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            required: true,\n            placeholder: \"Enter First Name\",\n            onChange: changeHandler,\n            value: formData.firstName,\n            name: \"firstName\",\n            className: \"form-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            children: [\"Last Name \", /*#__PURE__*/_jsxDEV(\"sup\", {\n              className: \"required\",\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            required: true,\n            placeholder: \"Enter Last Name\",\n            onChange: changeHandler,\n            value: formData.lastName,\n            name: \"lastName\",\n            className: \"form-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            children: [\"Email Address \", /*#__PURE__*/_jsxDEV(\"sup\", {\n              className: \"required\",\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            required: true,\n            placeholder: \"Enter your email address\",\n            value: formData.email,\n            onChange: changeHandler,\n            name: \"email\",\n            className: `form-input ${emailError ? \"error\" : \"\"}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), emailError && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-text\",\n            children: \"Email is not valid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 28\n          }, this), emailExists && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-text\",\n            children: \"User already exists with this email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group password-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            children: [\"Create Password \", /*#__PURE__*/_jsxDEV(\"sup\", {\n              className: \"required\",\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: showCreatePass ? \"text\" : \"password\",\n            required: true,\n            placeholder: \"Enter Password\",\n            onChange: changeHandler,\n            value: formData.password,\n            name: \"password\",\n            className: \"form-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: () => setShowCreatePass(!showCreatePass),\n            className: \"password-toggle\",\n            children: showCreatePass ? /*#__PURE__*/_jsxDEV(AiOutlineEyeInvisible, {\n              fontSize: 24,\n              fill: \"#AFB2BF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(AiOutlineEye, {\n              fontSize: 24,\n              fill: \"#AFB2BF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group password-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            children: [\"Confirm Password \", /*#__PURE__*/_jsxDEV(\"sup\", {\n              className: \"required\",\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 32\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: showConfirmPass ? \"text\" : \"password\",\n            required: true,\n            placeholder: \"Confirm Password\",\n            onChange: changeHandler,\n            value: formData.confirmPassword,\n            name: \"confirmPassword\",\n            className: \"form-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: () => setShowConfirmPass(!showConfirmPass),\n            className: \"password-toggle\",\n            children: showConfirmPass ? /*#__PURE__*/_jsxDEV(AiOutlineEyeInvisible, {\n              fontSize: 24,\n              fill: \"#AFB2BF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(AiOutlineEye, {\n              fontSize: 24,\n              fill: \"#AFB2BF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submit-button\",\n          children: \"Create Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Signup, \"y6ELJB+KBA8IN844Y8j5dyHOSUs=\");\n_c = Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useState","useEffect","AiOutlineEye","AiOutlineEyeInvisible","toast","jsxDEV","_jsxDEV","Fragment","_Fragment","Signup","_s","showCreatePass","setShowCreatePass","showConfirmPass","setShowConfirmPass","emailError","setEmailError","emailExists","setEmailExists","existingEmails","setExistingEmails","formData","setFormData","firstName","lastName","email","password","confirmPassword","emailRegex","fetchEmails","res","fetch","data","json","emails","error","console","changeHandler","event","name","value","target","test","prev","postdata_into_database","e","preventDefault","includes","method","headers","body","JSON","stringify","first_name","last_name","e_mail","confirm_password","success","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","required","placeholder","onChange","onClick","fontSize","fill","_c","$RefreshReg$"],"sources":["/Users/shyamghetiya/Desktop/both/faka/demo/src/components/Signup.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { AiOutlineEye, AiOutlineEyeInvisible } from 'react-icons/ai';\nimport { toast } from 'react-toastify';\nimport './Signup.css'; \n\nexport const Signup = () => {\n  const [showCreatePass, setShowCreatePass] = useState(false);\n  const [showConfirmPass, setShowConfirmPass] = useState(false);\n  const [emailError, setEmailError] = useState(false);\n  const [emailExists, setEmailExists] = useState(false);\n  const [existingEmails, setExistingEmails] = useState([]); // To store all emails from the backend\n\n  const [formData, setFormData] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n\n  // Fetch existing emails from the backend on component mount\n  useEffect(() => {\n    async function fetchEmails() {\n      try {\n        const res = await fetch(\"api/v1/getallusers\"); // Backend API to get all existing user emails\n        const data = await res.json();\n        setExistingEmails(data.emails); // Assuming backend sends { emails: [...] }\n      } catch (error) {\n        console.error(\"Error fetching existing emails:\", error);\n      }\n    }\n\n    fetchEmails();\n  }, []);\n\n  function changeHandler(event) {\n    const { name, value } = event.target;\n\n    if (name === \"email\") {\n      setEmailError(!emailRegex.test(value));\n    }\n\n    setFormData((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n  }\n\n  async function postdata_into_database(e) {\n    e.preventDefault();\n\n    // Validate email format\n    if (emailError || !emailRegex.test(formData.email)) {\n      toast.error(\"Invalid email format\");\n      return;\n    }\n\n    // Validate password matching\n    if (formData.password !== formData.confirmPassword) {\n      toast.error(\"Passwords do not match\");\n      return;\n    }\n\n    // Check if the email already exists locally from the fetched email list\n    if (existingEmails.includes(formData.email)) {\n      setEmailExists(true);\n      toast.error(\"User already exists with this email\");\n      return;\n    }\n\n    setEmailExists(false);\n\n    const { firstName, lastName, email, password, confirmPassword } = formData;\n\n    try {\n      // Proceed with creating the account\n      const res = await fetch(\"api/v1/createmessage\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          first_name: firstName,\n          last_name: lastName,\n          e_mail: email,\n          password,\n          confirm_password: confirmPassword,\n        }),\n      });\n\n      const data = await res.json();\n\n      if (data.success) {\n        toast.success(\"Account Created\");\n      } else {\n        toast.error(\"Error creating account\");\n      }\n\n    } catch (error) {\n      toast.error(\"Error connecting to the server\");\n    }\n  }\n\n  return (\n    <>\n      <div className='heading'>Sign Up for the Register</div>\n      <div className=\"signup-container\">\n        <form method=\"POST\" onSubmit={postdata_into_database}>\n          <div className=\"form-group\">\n            <label className=\"form-label\">\n              First Name <sup className=\"required\">*</sup>\n            </label>\n            <input\n              type=\"text\"\n              required\n              placeholder=\"Enter First Name\"\n              onChange={changeHandler}\n              value={formData.firstName}\n              name=\"firstName\"\n              className=\"form-input\"\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label className=\"form-label\">\n              Last Name <sup className=\"required\">*</sup>\n            </label>\n            <input\n              type=\"text\"\n              required\n              placeholder=\"Enter Last Name\"\n              onChange={changeHandler}\n              value={formData.lastName}\n              name=\"lastName\"\n              className=\"form-input\"\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label className=\"form-label\">\n              Email Address <sup className=\"required\">*</sup>\n            </label>\n            <input\n              type=\"email\"\n              required\n              placeholder=\"Enter your email address\"\n              value={formData.email}\n              onChange={changeHandler}\n              name=\"email\"\n              className={`form-input ${emailError ? \"error\" : \"\"}`}\n            />\n            {emailError && <span className=\"error-text\">Email is not valid</span>}\n            {emailExists && <span className=\"error-text\">User already exists with this email</span>}\n          </div>\n\n          <div className=\"form-group password-group\">\n            <label className=\"form-label\">\n              Create Password <sup className=\"required\">*</sup>\n            </label>\n            <input\n              type={showCreatePass ? \"text\" : \"password\"}\n              required\n              placeholder=\"Enter Password\"\n              onChange={changeHandler}\n              value={formData.password}\n              name=\"password\"\n              className=\"form-input\"\n            />\n            <span\n              onClick={() => setShowCreatePass(!showCreatePass)}\n              className=\"password-toggle\"\n            >\n              {showCreatePass ? (\n                <AiOutlineEyeInvisible fontSize={24} fill=\"#AFB2BF\" />\n              ) : (\n                <AiOutlineEye fontSize={24} fill=\"#AFB2BF\" />\n              )}\n            </span>\n          </div>\n\n          <div className=\"form-group password-group\">\n            <label className=\"form-label\">\n              Confirm Password <sup className=\"required\">*</sup>\n            </label>\n            <input\n              type={showConfirmPass ? \"text\" : \"password\"}\n              required\n              placeholder=\"Confirm Password\"\n              onChange={changeHandler}\n              value={formData.confirmPassword}\n              name=\"confirmPassword\"\n              className=\"form-input\"\n            />\n            <span\n              onClick={() => setShowConfirmPass(!showConfirmPass)}\n              className=\"password-toggle\"\n            >\n              {showConfirmPass ? (\n                <AiOutlineEyeInvisible fontSize={24} fill=\"#AFB2BF\" />\n              ) : (\n                <AiOutlineEye fontSize={24} fill=\"#AFB2BF\" />\n              )}\n            </span>\n          </div>\n\n          <button type=\"submit\" className=\"submit-button\">\n            Create Account\n          </button>\n        </form>\n      </div>\n    </>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}